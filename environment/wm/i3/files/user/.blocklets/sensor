#!/bin/bash

LOWEST_COLOR="#3a99ff"
LOWEST_SYMBOL=""
LOWMID_COLOR="#40ff40"
LOWMID_SYMBOL=""
MID_COLOR="#ccff00"
MID_SYMBOL=""
HIGH_COLOR="#ff8800"
HIGH_SYMBOL=""
OVER_COLOR="#dd0000"
OVER_SYMBOL=""

TEXT_OUT=""
SYMBOL=""
SENSOR_VALUE=""
TEXT_COLOR=""

#Core temperatures
CORE_TEMPS=$(sensors coretemp-isa-0000 | awk '/Core/ {print $3}' | cut -d. -f1 | sed -n -e 's/^.*+//p')

#Click actions
case "$BLOCK_BUTTON" in
    1) #Left Click - Open htop
      if [[ $(ps cax | grep htop) = "" ]]; then
        urxvt -e htop
      fi;;
esac

function AddDecoration {
  if [[ $SENSOR_VALUE -le 25 ]]; then
    TEXT_COLOR=$LOWEST_COLOR
    SYMBOL=$LOWEST_SYMBOL
  elif [[ $SENSOR_VALUE -le 50  ]]; then
    TEXT_COLOR=$LOWMID_COLOR
    SYMBOL=$LOWMID_SYMBOL
  elif [[ $SENSOR_VALUE -le 75 ]]; then
    TEXT_COLOR=$MID_COLOR
    SYMBOL=$MID_SYMBOL
  elif [[ $SENSOR_VALUE -le 100 ]]; then
    TEXT_COLOR=$HIGH_COLOR
    SYMBOL=$HIGH_SYMBOL
  else
    TEXT_COLOR=$OVER_COLOR
    SYMBOL=$OVER_SYMBOL
  fi
}

function PrintText {
  echo $SYMBOL $TEXT_OUT
  echo $SYMBOL $TEXT_OUT
  echo $TEXT_COLOR
}

function Process {
  _counter=0
  if [[ -n $1 ]]; then
    for _Temp in $(echo $CORE_TEMPS | tr ";" "\n"); do
      if [[ $_counter = $1 ]]; then
        SENSOR_VALUE=$_Temp
        break
      fi
      _counter=$(($_counter+1))
    done
    AddDecoration
    TEXT_OUT="$SENSOR_VALUE"
    if [[ $SENSOR_VALUE = "" ]]; then
      TEXT_OUT="Invalid core id"
      TEXT_COLOR="#ff0000"
    fi
  else
    for _Temp in $(echo $CORE_TEMPS | tr ";" "\n"); do
      SENSOR_VALUE=$_Temp
      AddDecoration
      TEXT_OUT="$TEXT_OUT $SENSOR_VALUE"
      _counter=$(($_counter+1))
    done
  fi
  PrintText
}

Process $1
